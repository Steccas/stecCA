# docker-compose.yml
version: "3"
services:
  postgres:
    image: "postgres:alpine" # use latest official postgres version
    #name: "postgres-ca"
    networks:
      - canet
    ports:
      - "127.0.0.1:5432:5432/tcp"
    env_file:
      - database.env # configure postgres
    volumes:
      - db_data:/var/lib/postgresql/data/ # persist data even if container shuts down
      - ./create_dbs.sh:/docker-entrypoint-initdb.d/create_dbs.sh
    restart: unless-stopped

  redis:
    image: "redis:alpine" # default version of Ubuntu 20.02, apt-cache show redis-server
    restart: on-failure
    networks:
      - canet
    ports:
      - 127.0.0.1:6379:6379/tcp
    restart: unless-stopped 
     
  nginx:
    build:
      context: ./nginx
    #name: lemur-nginx
    networks:
      - canet
    volumes:
      - ca_data:/opt/lemur/lemur/static/dist:ro
      #- /etc/nginx/:/etc/nginx/
    restart: on-failure
    depends_on:
      - lemur
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  lemur:
    image: jockerdragon/netlix-lemur:latest
    #build:
    #  context: ./lemur-build-docker
    #name: lemur
    restart: on-failure
    networks:
      canet:
        ipv4_address: 192.168.48.4
    depends_on:
      - postgres
      - redis
    env_file:
      - lemur.env
      - lemur_db.env
    volumes:
      - ./lemur_keys:/home/lemur/.lemur/lemur_keys:ro
      - ./lemur.conf.py:/home/lemur/.lemur/lemur.conf.py:ro
      - ca_data:/opt/lemur/lemur/static/dist:ro
    restart: unless-stopped

volumes:
  db_data: # named volumes can be managed easier using docker-compose
  ca_data:

networks:
  canet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.48.0/29
